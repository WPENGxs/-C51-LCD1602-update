C51 COMPILER V9.00   MAIN                                                                  01/26/2021 19:30:30 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "reg51.h" 
   2          #include "stdio.h"
   3          #define uint unsigned int
   4          #define uchar unsigned char
   5          #define KEY P1
   6          sbit RS=P2^6;
   7          sbit RW=P2^5;
   8          sbit E=P2^7;
   9          void delay(uint n)
  10          {
  11   1        uint x,y;
  12   1        for(x=n;x>0;x--)
  13   1           for(y=110;y>0;y--);
  14   1      }
  15          void wcomlcd(uchar com)
  16          {
  17   1        RS=0;
  18   1        RW=0;
  19   1        P0=com;
  20   1        delay(5);
  21   1        E=1;
  22   1        E=0;
  23   1      }
  24          void wdatlcd(uchar dat)
  25          {
  26   1        RS=1;
  27   1        RW=0;
  28   1        P0=dat;
  29   1        delay(5);
  30   1        E=1;
  31   1        E=0;
  32   1      }
  33          void wdatlcd_disp(uchar x,uchar y,uchar dat)
  34          {
  35   1        uchar address;
  36   1        if(y==1) address=0x80+x;
  37   1        else address=0xc0+x;
  38   1        wcomlcd(address);
  39   1        wdatlcd(dat);
  40   1      }
  41          void initlcd()
  42          {
  43   1        wcomlcd(0x38);
  44   1        wcomlcd(0x0c);
  45   1        wcomlcd(0x06);
  46   1        wcomlcd(0x01);
  47   1      }
  48          uint keyscan()
  49          {
  50   1        uchar i=0;
  51   1        uint keyvalue;
  52   1        KEY=0x0f;
  53   1        if(KEY!=0x0f)
  54   1        {
  55   2          delay(100);
C51 COMPILER V9.00   MAIN                                                                  01/26/2021 19:30:30 PAGE 2   

  56   2          if(KEY!=0x0f)
  57   2          {
  58   3            KEY=0x0f;
  59   3            switch(KEY)
  60   3            {
  61   4              case(0x07):keyvalue=1;break;
  62   4              case(0x0b):keyvalue=2;break;
  63   4              case(0x0d):keyvalue=3;break;
  64   4              case(0x0e):keyvalue=4;break;
  65   4            }
  66   3            KEY=0xf0;
  67   3            switch(KEY)
  68   3            {
  69   4              case(0x70):keyvalue=keyvalue;break;
  70   4              case(0xb0):keyvalue=keyvalue+4;break;
  71   4              case(0xd0):keyvalue=keyvalue+8;break;
  72   4              case(0xe0):keyvalue=keyvalue+12;break;
  73   4            }
  74   3          }
  75   2        }
  76   1        while((i<50)&&(KEY!=0xf0))
  77   1        {
  78   2          delay(5);
  79   2          i++;
  80   2        }
  81   1        return keyvalue;
  82   1      }
  83          void main()
  84          {
  85   1        uint k,ii,f,y1,y2,y3;
  86   1        uint d=0,g=0,i=1,z=0,x2=0,r[4]={0},w[4]={0},ad[6]={0},jud=0,add=0,zz=0;
  87   1        uchar x1,adc[8];
  88   1        initlcd();
  89   1        wcomlcd(0x80);
  90   1        delay(5);
  91   1        start:
  92   1        while(1)
  93   1        {
  94   2          KEY=0x0f;
  95   2          if(KEY!=0x0f)
  96   2          {
  97   3            k=keyscan();
  98   3            switch(k)
  99   3            {
 100   4              case 1:x1='1';x2=1;break;
 101   4              case 2:x1='2';x2=2;break;
 102   4              case 3:x1='3';x2=3;break;
 103   4              case 4:x1='+';d=1;break;
 104   4              case 5:x1='4';x2=4;break;
 105   4              case 6:x1='5';x2=5;break;
 106   4              case 7:x1='6';x2=6;break;
 107   4              case 8:x1='-';d=2;break;
 108   4              case 9:x1='7';x2=7;break;
 109   4              case 10:x1='8';x2=8;break;
 110   4              case 11:x1='9';x2=9;break;
 111   4              case 12:x1='*';d=3;break;
 112   4              case 13:jud=2;zz=1;break;
 113   4              case 14:x1='0';x2=0;break;
 114   4              case 15:x1='=';z=2;break;
 115   4              case 16:x1='/';d=4;break;
 116   4            }
 117   3            if(k!=13)
C51 COMPILER V9.00   MAIN                                                                  01/26/2021 19:30:30 PAGE 3   

 118   3            {
 119   4              wdatlcd_disp(add,1,x1);
 120   4              add++;
 121   4            }
 122   3            if(z==2)
 123   3            {
 124   4              if(i==2) y2=w[3];
 125   4              if(i==3) y2=w[3]*10+w[2];
 126   4              if(i==4) y2=w[3]*100+w[2]*10+w[1];
 127   4              if(i==5) y2=w[3]*1000+w[2]*100+w[1]*10+w[0];
 128   4               switch(g)
 129   4               {
 130   5                 case 1:y3=y1+y2;break;
 131   5                 case 2:y3=y1-y2;break;
 132   5                 case 3:y3=y1*y2;break;
 133   5                 case 4:y3=y1/y2;break;
 134   5               }
 135   4               ad[0]=y3/100000%10;
 136   4               ad[1]=y3/10000%10;
 137   4               ad[2]=y3/1000%10;
 138   4               ad[3]=y3/100%10;
 139   4               ad[4]=y3/10%10;
 140   4               ad[5]=y3%10;
 141   4               for(f=0;f<8;f++)
 142   4               {
 143   5                  switch(ad[f])
 144   5                  {
 145   6                    case 1:adc[f]='1';break;
 146   6                    case 2:adc[f]='2';break;
 147   6                    case 3:adc[f]='3';break;
 148   6                    case 4:adc[f]='4';break;
 149   6                    case 5:adc[f]='5';break;
 150   6                    case 6:adc[f]='6';break;
 151   6                    case 7:adc[f]='7';break;
 152   6                    case 8:adc[f]='8';break;
 153   6                    case 9:adc[f]='9';break;
 154   6                    case 0:adc[f]='0';break;
 155   6                    default:adc[f]='0';break;
 156   6                  }
 157   5               }
 158   4              wcomlcd(0x80+0x40);
 159   4              for(ii=0;ii<6;ii++)
 160   4                wdatlcd(adc[ii]);    
 161   4                 if(jud==2)
 162   4              {
 163   5                initlcd();wcomlcd(0x80);z=0;
 164   5                for(ii=0;ii<8;ii++)
 165   5                  adc[ii]='0';
 166   5                for(ii=0;ii<7;ii++)
 167   5                  {r[ii]=0;w[ii]=0;}
 168   5                  d=0,g=0,i=1,z=0,x2=0,add=0;jud=0;
 169   5                  goto start;
 170   5              }
 171   4            }
 172   3            if(k==13)
 173   3            {     
 174   4              i--;
 175   4            }
 176   3            if(k!=13)
 177   3            {
 178   4              if(d==0)
 179   4              {
C51 COMPILER V9.00   MAIN                                                                  01/26/2021 19:30:30 PAGE 4   

 180   5                r[4-i]=x2;
 181   5                i++;
 182   5              }
 183   4              if(d==5)
 184   4              {
 185   5                w[4-i]=x2;
 186   5                i++;
 187   5              } 
 188   4              if(d==1||d==2||d==3||d==4) 
 189   4              { 
 190   5                if(i==2) y1=r[3];
 191   5                if(i==3) y1=r[3]*10+r[2];
 192   5                if(i==4) y1=r[3]*100+r[2]*10+r[1];
 193   5                if(i==5) y1=r[3]*1000+r[2]*100+r[1]*10+r[0];
 194   5                g=d,d=5,i=1;
 195   5              }
 196   4            }
 197   3            if(k==13&&z==0)
 198   3            {
 199   4              add--;
 200   4              wdatlcd_disp(add,1,' ');
 201   4              z=0;jud=0;
 202   4            }
 203   3          }
 204   2        }
 205   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1639    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      62
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
